/*
 * Gridly API
 *
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 5.9.0
 * Contact: support@gridly.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Com.Gridly.Client;
using Com.Gridly.Api;
using Com.Gridly.Model;

namespace Com.Gridly.Test
{
    /// <summary>
    ///  Class for testing CdnApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class CdnApiTests
    {
        private CdnApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CdnApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CdnApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOf' CdnApi
            //Assert.IsInstanceOf(typeof(CdnApi), instance);
        }

        
        /// <summary>
        /// Test List
        /// </summary>
        [Test]
        public void ListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridId = null;
            //int? offset = null;
            //int? limit = null;
            //List<string> ids = null;
            //bool? published = null;
            //var response = instance.List(gridId, offset, limit, ids, published);
            //Assert.IsInstanceOf(typeof(List<CDN>), response, "response is List<CDN>");
        }
        
        /// <summary>
        /// Test Publish
        /// </summary>
        [Test]
        public void PublishTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cdnId = null;
            //var response = instance.Publish(cdnId);
            //Assert.IsInstanceOf(typeof(CDN), response, "response is CDN");
        }
        
        /// <summary>
        /// Test UnPublish
        /// </summary>
        [Test]
        public void UnPublishTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string cdnId = null;
            //var response = instance.UnPublish(cdnId);
            //Assert.IsInstanceOf(typeof(CDN), response, "response is CDN");
        }
        
    }

}
